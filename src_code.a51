ORG 0000H
LJMP MAIN

ORG 000BH
LJMP INTERRUPT

; PWM Variables - THÊM M?I
PWM_PERIOD      EQU 100         ; Chu k? PWM
PWM_DUTY        DATA 30H        ; Duty cycle (0-100)
PWM_COUNTER     DATA 31H        ; B? d?m PWM

MAIN:
MOV P0, #0FFH
CLR P1.5
SETB P1.0
SETB P1.1
SETB P1.2
SETB P1.3
CLR P1.4
SETB P1.6

; Kh?i t?o PWM - THÊM M?I
MOV PWM_DUTY, #0
MOV PWM_COUNTER, #0

; Kh?i t?o LCD
MOV A,#38H
ACALL COMMAND
ACALL DELAY
MOV A,#0EH
ACALL COMMAND
ACALL DELAY
MOV A,#01H
ACALL COMMAND
ACALL DELAY
MOV A,#080H
ACALL COMMAND
ACALL DELAY

MOV TMOD, #01H
MOV TH0, #HIGH(-50000)
MOV TL0, #LOW(-50000)
MOV IE, #82H
SETB TR0

LJMP AGAIN

; =====================================

COMMAND:
MOV P2,A
CLR P3.1
CLR P3.0
SETB P3.2
ACALL DELAY
CLR P3.2
RET

LCDWRITE:
MOV P2,A
SETB P3.1
CLR P3.0
SETB P3.2
ACALL DELAY
CLR P3.2
RET

DELAY:
MOV R3,#0FFH
AGAIN_DELAY: DJNZ R3,AGAIN_DELAY
RET

DELAY1:
MOV R3,#0FFH
HERE1: MOV R5,#0FFH
HERE2: MOV 75H,#02FH
HERE3: DJNZ 75H,HERE3
DJNZ R5,HERE2
DJNZ R3,HERE1
RET

AGAIN:
MOV A,#' '
ACALL LCDWRITE
ACALL DELAY
MOV A,#'D'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'o'
ACALL LCDWRITE
ACALL DELAY
MOV A,#' '
ACALL LCDWRITE
ACALL DELAY
MOV A,#'A'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'n'
ACALL LCDWRITE
ACALL DELAY
MOV A,#' '
ACALL LCDWRITE
ACALL DELAY
MOV A,#'V'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'X'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'L'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'-'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'V'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'D'
ACALL LCDWRITE
ACALL DELAY
MOV A,#'K'
ACALL LCDWRITE
ACALL DELAY
MOV A,#0C1H
ACALL COMMAND
ACALL DELAY

MOV A,#'M'
ACALL LCDWRITE
MOV A,#'A'
ACALL LCDWRITE
MOV A,#':'
ACALL LCDWRITE
MOV A,#' '
ACALL LCDWRITE
MOV A,#'C'
ACALL LCDWRITE
MOV A,#'E'
ACALL LCDWRITE
MOV A,#'1'
ACALL LCDWRITE
MOV A,#'0'
ACALL LCDWRITE
MOV A,#'3'
ACALL LCDWRITE
MOV A,#'.'
ACALL LCDWRITE
MOV A,#'P'
ACALL LCDWRITE
MOV A,#'2'
ACALL LCDWRITE
MOV A,#'3'
ACALL LCDWRITE
ACALL DELAY1
MOV A,#01H
ACALL COMMAND
ACALL DELAY

; ==== Ð?c d? li?u c?m bi?n ====
AGAIN1:
SETB P3.5
SETB P3.3
CLR P3.4
SETB P3.4
WAIT_BUSY: JB P3.5, WAIT_BUSY
CLR P3.3

; ==== Hi?n th? nhi?t d? ====
MOV A, #01H
ACALL COMMAND
MOV A, #080H
ACALL COMMAND
ACALL DELAY
MOV R1,P0
MOV A,R1
MOV R4,A
ACALL COMPARE
MOV A,R4
LCALL CONVERSION
LCALL LCDWRITETMP

; Hi?n th? PWM - THÊM M?I
MOV A,#0C0H
ACALL COMMAND
ACALL DELAY
ACALL DISPLAY_PWM

ACALL DELAY1

LJMP AGAIN1

; ==== So sánh t?c d? và di?u khi?n ====
COMPARE:
CLR C
CJNE R1,#20,CHECK_20
CHECK_20: JNC LEVEL1
ACALL SPEED1
LJMP COMP_DONE

LEVEL1:
CJNE R1,#30,CHECK_30
CHECK_30: JNC LEVEL2
ACALL SPEED2
LJMP COMP_DONE

LEVEL2:
CJNE R1,#35,CHECK_35
CHECK_35: JNC LEVEL3
ACALL SPEED3
LJMP COMP_DONE

LEVEL3:
CJNE R1,#40,CHECK_40
CHECK_40: JNC LEVEL4
ACALL SPEED4
LJMP COMP_DONE

LEVEL4:
CJNE R1,#45,CHECK_45
CHECK_45: JNC LEVEL5
ACALL SPEED5
SETB P1.4
CLR P1.6
ACALL WARNING_DISPLAY 
RET

LEVEL5:
MOV PWM_DUTY, #0 
CLR P1.5
SETB P1.0
SETB P1.1
SETB P1.2
SETB P1.3
CLR P1.4
SETB P1.6

MOV A,#01H
ACALL COMMAND
RET


COMP_DONE:
CLR P1.4
SETB P1.6
RET

; ==== Các m?c di?u khi?n ====
SPEED1: CLR TR0
MOV R2,#0AAH
MOV TH0,#60H
SETB TR0
CLR P1.0
SETB P1.1
SETB P1.2
SETB P1.3
MOV PWM_DUTY, #20        ; THÊM PWM 20%
RET

SPEED2: CLR TR0
MOV R2,#0AAH
MOV TH0,#40H
SETB TR0
SETB P1.0
CLR P1.1
SETB P1.2
SETB P1.3
MOV PWM_DUTY, #40        ; THÊM PWM 40%
RET

SPEED3: CLR TR0
MOV R2,#0AAH
MOV TH0,#20H
SETB TR0
SETB P1.0
SETB P1.1
CLR P1.2
SETB P1.3
MOV PWM_DUTY, #60        ; THÊM PWM 60%
RET

SPEED4: CLR TR0
MOV R2,#0AAH
MOV TH0,#00H
SETB TR0
SETB P1.0
SETB P1.1
SETB P1.2
CLR P1.3
MOV PWM_DUTY, #80        ; THÊM PWM 80%
RET

SPEED5: CLR TR0
MOV R2,#0AAH
MOV TH0,#00H
SETB TR0
SETB P1.0
SETB P1.1
SETB P1.2
SETB P1.3
MOV PWM_DUTY, #100       ; THÊM PWM 100%
RET

; ==== Hi?n th? nhi?t d? ====
LCDWRITETMP:
MOV A,#' '
ACALL LCDWRITE
MOV A,#' '
ACALL LCDWRITE
MOV A,#' '
ACALL LCDWRITE
MOV A,#'T'
ACALL LCDWRITE
MOV A,#'E'
ACALL LCDWRITE
MOV A,#'M'
ACALL LCDWRITE
MOV A,#'P'
ACALL LCDWRITE
MOV A,#':'
ACALL LCDWRITE
MOV A,R6
ACALL LCDWRITE
MOV A,R7
ACALL LCDWRITE
MOV A,#'C'
ACALL LCDWRITE
RET

; ==== Hi?n th? PWM - THÊM M?I ====
DISPLAY_PWM:
MOV A,#'P'
ACALL LCDWRITE
MOV A,#'W'
ACALL LCDWRITE
MOV A,#'M'
ACALL LCDWRITE
MOV A,#':'
ACALL LCDWRITE

; Chuy?n PWM duty sang ASCII
MOV A, PWM_DUTY

; Ki?m tra n?u < 100 thì ch? hi?n th? 2 s?
CJNE A, #100, TWO_DIGIT
; Tru?ng h?p 100%
MOV A,#'1'
ACALL LCDWRITE
MOV A,#'0'
ACALL LCDWRITE
MOV A,#'0'
ACALL LCDWRITE
SJMP PERCENT_SIGN

TWO_DIGIT:
MOV A, PWM_DUTY
MOV B,#10
DIV AB
MOV R2,B           ; Hàng don v?  
MOV R3,A           ; Hàng ch?c

; Hi?n th? hàng ch?c
MOV A,R3
ADD A,#30H
ACALL LCDWRITE

; Hi?n th? hàng don v?
MOV A,R2
ADD A,#30H
ACALL LCDWRITE

PERCENT_SIGN:
MOV A,#'%'
ACALL LCDWRITE
RET

; ==== Chuy?n d?i sang ký t? ASCII ====
CONVERSION:
MOV B,#10
DIV AB
MOV R7,B
MOV B,#10
DIV AB
MOV R6,B
MOV A,R6
ADD A,#30H
MOV R6,A
MOV A,R7
ADD A,#30H
MOV R7,A
RET

; ==== C?nh báo ====
WARNING_DISPLAY:
MOV A,#' '
ACALL LCDWRITE
MOV A,#' '
ACALL LCDWRITE
MOV A,#' '
ACALL LCDWRITE
MOV A,#'A'
ACALL LCDWRITE
MOV A,#'L'
ACALL LCDWRITE
MOV A,#'E'
ACALL LCDWRITE
MOV A,#'R'
ACALL LCDWRITE
MOV A,#'T'
ACALL LCDWRITE
MOV A,#'!'
ACALL LCDWRITE
RET

; ==== Ng?t Timer0 - S?A Ð?I THÀNH PWM ====
INTERRUPT:
PUSH ACC
PUSH PSW

; T?o PWM
INC PWM_COUNTER
MOV A, PWM_COUNTER
CJNE A, #PWM_PERIOD, CHECK_DUTY
MOV PWM_COUNTER, #0

CHECK_DUTY:
MOV A, PWM_COUNTER
CLR C
SUBB A, PWM_DUTY
JC SET_HIGH
CLR P1.5              ; PWM LOW
SJMP PWM_DONE

SET_HIGH:
SETB P1.5             ; PWM HIGH

PWM_DONE:
; Gi? nguyên timer reload
MOV TH0, #HIGH(-50000)
MOV TL0, #LOW(-50000)
DJNZ R2, SKIP
MOV R2, #20
SKIP:

POP PSW
POP ACC
RETI

ORG 0300H
END
